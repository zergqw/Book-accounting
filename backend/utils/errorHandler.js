const errorHandler = (err, req, res, next) => {
  console.log('–û—à–∏–±–∫–∞: ', err);

  let statusCode = res.statusCode === 200 ? 500 : res.statusCode;
  let message = err.message;

  if(err.code) {
    switch(err.code) {
    case '23505':
      statusCode = 400;
      message = '–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –∑–∞–ø–∏—Å—å —Å —Ç–∞–∫–∏–º –∑–Ω–∞—á–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
      break;
    case '22P02':
      statusCode = 400;
      message = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö';
      break;
    case '23503':
      statusCode = 400;
      message = '–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å—Å—ã–ª–æ—á–Ω–æ–π —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏';
      break;
    case '42P01':
      statusCode = 500;
      message = '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ–∏—à–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
      break;
    default:
      if(err.code.startsWith('42')) {
        statusCode = 500;
        message = '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
      } else {
        statusCode = 403;
        message = '–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö';
      }
    }
  }

  if(err.name === 'ValidationError') {
    statusCode = 400;
    message = Object.values(err.errors).map(val => val.message).join(', ');
  }

  if (err.name === 'CastError') {
    statusCode = 400;
    message = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID';
  }

  res.status(statusCode).json({
    success: false,
    error: message,
    stack: process.env.NODE_ENV === 'production' ? 'ü•û' : err.stack
  })
}

module.exports = errorHandler;